// das 1 //
// JAVASCRIPT - ՆԵՐԱԾՈՒԹՅՈՒՆ


// alert('բարև' + 77);
// // կտպի բարև77
// alert("բարև " + 77);
// // կտպի բարև 77
// alert("բարև" + ' ձեզ');
// // կտպի բարև ձեզ

// alert("բարև" + "" + "ձեզ");
// // կտպի բարևձեզ
// alert("բարև" + " " + "ձեզ");
// // կտպի բարև ձեզ

// alert(7 + 5 + "բարև" + 7 + 5);
// // կտպի 12բարև75





// das 2 //
// JAVASCRIPT - Փոփոխականներ(let)

// 1.Փոփոխականը անուն է որի մեջ մենք կարող ենք վերագրել արժեք
// 2.Փոփոխականները ստեղծում ենք let տեքստով,գրում ենք let և մեր արժեքի անունը(փոփոխականը), կարող ենք վերագրել ինչ-որ արժեք անմիջապես կամ ստեղծել վերագրել ապագայում
// 3.( = ) -ը ծրագրաորման մեջ նշանակում է վերագրել, այսինքն աջ կողմը վարագրվում է ձախ կողմի մեջ

// let x=7,y=5;
// alert( x + y + "բարև" + x + y);

// կտպի (12բարև75)

// 4.javascript-ը թույլ չի տալիս երկու փոփոխական ստեղծել նույն անունով բայց կարող ենք նույն փոփոխականին տված արժեքը փոխել
// եթե նույն փոփոխականին տված արժեքը փոխում ենք ապա alert ֆունկցիան ընդունում է անմիջապես վերևի տված արժեքը
// նաև կարող ենք տարբեր փոփոխականի նույն արժեքը տալ

// let a=4,b=5;
// a=7;
// a=1;
// alert(a);
// alert(a+b);
// a=6;
// alert(a+b);

// կտպի (1) հետո (6) հետո (11)


// JAVASCRIPT - ՍԽԱԼՆԵՐԻ ՀԱՅՏՆԱԲԵՐՈՒՄ


// 1.debugger; հրամանը թույլ է տալիս մեր գրած կոդը քայլառքայլ աշխատացնել և ուսումնասիրել փոփոխականի արժեքները



// das3 //
// JAVASCRIPT - prompt ֆունկցիա

// 1.prompt ֆունկցիան մեզ վերադարձնում է արդյունք
// 2.prompt ֆունկցիաի վերադարձրած արդյունքը դա այն տեքստն է որը մենք գրում ենք իր բացած պատուհանի մեջ
// 3.prompt ֆունկցիաի վերադարձրած արդյունքը մենք կարող ենք որպես արժեք վերագրել փոփոխականի

// let name = prompt("what is your name?");
// let lastname = prompt("what is your last name?")
// alert("nice to meet you " + name + " " + lastname);



// das4 //
// JAVASCRIPT - Բուլյան արժեքներ - Boolean արժեքներ (true(ճիշտ), false(սխալ))

// 1.եթե փոփոխականին վերագրած արժեքների համեմատությունը ճիշտ է alert ֆունկցիան կտպի true
// 2.եթե փոփոխականին վերագրած արժեքների համեմատությունը սխալ է alert ֆունկցիան կտպի false
// 3. ===(հավասար է)
// !==(հավասար չէ)
// >(մեծ է)
// <(փոքր է)
// >=(մեծ է կամ հավասար է)
// <=(փոքր է կամ հավասար է)

// 4.
// let x=6;
// let y="աշխարհ";
// let r = x < y;
// alert(r);
// let a=true;
// let b=false;
// alert(a + b);
// alert(a + " " + b);

// կտպի (false) հետո (1) հետո (true false)     /// false/0  true/1

// 5.
// prompt ֆունկցիայի բացած պատուհանի մեջ եթե մենք թիվ գրենք նա մեզ կվերադարձնի այդ թիվը որպես տեքստ
// օրինակ․

// let z=prompt("գրիր 7");
// alert(z===7);
// կտպի false(սխալ է) , քանի որ 7-ը տեքստային 7 -ին հավասար չէ

// իսկ եթե տեքստային 7-ը համեմատենք կտպի true(ճիշտ է)
// alert(z==="7");

// եթե ուզում ենք տեքստային թիվը դարձնենք թիվ երկու ստորակետներից առաջ դնում ենք +
// օրինակ․
// let n = +z;
// alert(n===7);
// կտպի true(ճիշտ է)

// եթե ուզում ենք թիվը դարձնենք տեքստային թիվ երկու ստորակետները մեջը դատարկ թողած գումարում ենք թվին
// let m = "" + n;
// alert(m==="7")

// կտպի true(ճիշտ է)


// das5 //
// JAVASCRIPT - Պայմանի օպերատորներ (if(եթե), else(հակառակ դեպքում))


// 1.կոդի մեջ մենք շատ հաճախ ուզում ենք արտահայտել եթե կոնցեպտը օրինակ երբ որ դուք փորձում եք ինչ որ կայք մուտք գործել և գրում եք լոգինն ու գախտնաբառը, կայքի հետևում գրված լոգիկան համեմատում է ձեր գրած լոգինն ու գախտնաբառը և ԵԹԵ համընկնում է նա ներս է թողնում, այսինքն եթե մենք ուզում ենք լոգիկա ստեղծել ասելով եթե համընկավ աշխատացրու մեր բլոկի մեջի կոդը , որը ինչ-որ գործողություն է կատարում(օրինակ այս օրինակում մուտք է թողնում կայք) դա անում ենք if(եթե անգլերեն նշանակում է if) օպերատորով
// 2.if(){}, else if(){}, else{}
// 3.եթե if(եթե) պայմանի համեմատությունը ճիշտ է(true է) ապա իր բլոկի մեջի կոդը կաշխատի իսկ եթե սխալ է(false է) ապա կանցնի հաջորդ կոդին
// 4.երկու if(եթե) պայման տալուց, առաջի if պայմանը եթե ճիշտ է ապա երկրորդ if պայմանի տակից գրված else(հակառակ դեպքում) պայմանը նույնպես կաշխատի, քանի որ քանի հատ if պայման տանք այդքան պատուհան է բացվելու

// let x=prompt("Ինչ է ձեր անունը");
// let z = x==="Օֆելյա";
// if (z) {
// alert("Դուք շատ գեղեցիկ անուն ունեք " + x );
// }
// if (x==="Վահե") {
// alert("Ձեր մուտքն արգելված է" + x);
// }
// else{
// alert("Բարի գալուստ ծրագրաորման աշխարհ "+x);
// }


// եթե մեր նպատակը մեկ պատուհան բացելն է ապա պետք է մեկ հատ if պայման ստեղծենք և if պայմանի մյուս տարբերակները միացնենք else if(){} (հակառակ դեպքում եթե) պայմանով

// let name = prompt("what is your name?");
// let lastname= prompt("what is your lastname?");

// if(name === "hakob") {
//     if(lastname=== "hakobyan") {
//         alert("vay inch hetaqrqira hakob hakobyan")
//     } else{
//         alert("shat vat azganun uneq hakob " + lastname)
//     }
// }
// else if(name === "anush   ") {
//     alert("voxjuyn anush");
// } else if(name === "Vazgen") {
//     alert("barev vazgen")
// }
// else{
//     alert("hajoxutyun")
// }




// das 6 //
// JAVASCRIPT - Պարզ խաղ

// let points = 0;

// let resp0 = prompt("what is the capital of Armenia?");

// if(resp0 === "yerevan") {
//     points = points + 1
// }
// let resp1 = prompt("what is the capital of Russia?");
// if(resp1 === "moscow") {
//     points = points + 1
// }
// let resp2 = prompt("what is the capital of France?");
// if(resp2 === "paris") {
//     points = points + 1;
// }
// alert("you received " + points + " out of 3");



// das 7 //
// JAVASCRIPT - Բուլյան օպերատորներ - Boolean operators( &&(և (and)), ||(կամ(or)), !(ոչ(not)) )

// 1. Բուլյան օպերատորները երբ տեսնում են երկու կողմից բուլյան արժեք կա(true(ճիշտ) կամ false(սխալ)) նրանք ինչ-որ գործողություն են անում, որոշում են կայացնում և նորից վերադարձնում են բուլյան արժեք

// 2. &&(և) օպերատորը կվերադարձնի true միայն այն դեպքում երբ որ և ձախ կողմի համեմատության արժեքը լինի true(ճիշտ) և աջ կողմի համեմատության արժեքը լինի true(ճիշտ) մնացած դեպքերում կվերադարձնի false(սխալ);

// let userResponse = +prompt("How old are you?");
// if(userResponse > 18 && userResponse < 40){
// alert("ձեր տարիքը համապատասխանում է");
// }
// user-ի տարիքը և պետք է 18-ից մեծ լինի և պետք է 40-ից փոքր լինի որպեսզի աշխատի alert ֆունկցիան

// 3.||(կամ) օպերատորը եթե գոնե մի կողմի համեմատության արժեքը true(ճիշտ) է կվերադարձնի true այսինքն կամ ձախ կողմի համեմատության արժեքը պետք է true(ճիշտ) լինի կամ աջ կողմի համեմատության արժեքը պետք է true(ճիշտ) լինի կամ երկուսնել որպեսզի վերադարձնի true արժեքը

// let userResponse = +prompt("How old are you?");
// if(userResponse > 18 || userResponse < 12){
// alert("ձեր տարիքը համապատասխանում է");
// }
// user-ի տարիքը կամ պետք է 18-ից մեծ լինի կամ պետք է 12-ից փոքր լինի որպեսզի աշխատի alert ֆունկցիան

// 4.!(ոչ) օպերատորը կարող է ցանկացած բուլյան արժեք շուռ տալ եթե true(ճիշտ) է դարձնել false(սխալ) եթե false(սխալ) է դարձնել true(ճիշտ)
// !(ոչ) օպերատորը օգտագործելիս համեմատության հետ որպեսզի նա աշխատի պետք է համեմատությունը վերցնենք փակագծերի մեջ
// !(... > ...)

// let userResponse = +prompt("How old are you?")
// if(! (userResponse > 18)) {
//     alert("ձեր տարիքը համապատասխանում է")
// }



// das 8 //
// JAVASCRIPT - while(քանի դեռ) ցիկլ

// 1.while(քանի դեռ) պայմանը աշխատում է հետևյալ կերպ եթե իր արժեքը true է նրա մեջի կոդը կաշխատի և բլոկը ավարտելուց հետո անմիջապես նորից կստուգի while պայմանի արժեքը և եթե նորից true է նորից կաշխատի և ՔԱՆԻ ԴԵՌ իր արժեքը true է նա կաշխատի այնքան միչև արժեքը դառնա false, իսկ եթե արժեքը բլոկի աշխատելուց հետո չփոխվի միշտ մնա նույնը բլոկը անվերջ կաշխատի այդպես մենք կստանաք անվերջական ցիկլ
// let i = 0;
// while(i < 3){
// alert(i);
// }
// և նա անվերջ կաշխատի

// 2.while(քանի դեռ) պայմանը որպեսզի անվերջ չաշխատի այսինքն ավարտի իր գործողությունը, ցիկլային բլոկից դուրս գա և անցնի հաջորդ կոդին մեզ պետք է մի կոդ որը ցիկլի ինչ-որ քանակից հետո կփոխի while-ի արժեքը true-ն դարձնելով false
// let i = 0;
// while(i < 3){
// alert(i);
// i = i + 1;
// }
// կտպի 0 հետո 1 հետո 2 և կավարտվի

// let i = 0;
// while(i < 3){
// i = i + 1;
// alert(i);
// }
// կտպի 1 հետո 2 հետո 3 և կավարտվի

// 3.while(քանի դեռ) պայմանը որպեսզի անվերջ չաշխատի այսինքն ավարտի իր գործողությունը, ցիկլային բլոկից դուրս գա և անցնի հաջորդ կոդին մեզ պետք է տանք break(անջատել) հրամանը
// break-ը հրաման չի այն առումով որ ինքը ֆունկցիա չի այլ ցիկլի ինֆորմացիա է որով ասում ենք ցիկլին երբ որ տեսնում ես break-ին դուրս արի ցիկլից

// while(true) {
//     let userResponse = prompt("Hi");
//     if(userResponse === "hajox"){
//         let userRespons = prompt("Hiiii");
//         if(userRespons === "barev") {
//             break;
//         }
//     }
//     alert("ok, we will continue");
// }


// 4.while(քանի դեռ) պայմանը երբ որ տեսնում է continue(շարունակել) հրամանը իր բլոկի աշխատանքը սկսում է նորից, բլոկի աշխատանքը համարելով ավարտված (այսինքն continue-ից հետո գրված կոդերը չի աշխատում) բարձրանում է վերև և նորից ստուգում է արժեքը և եթե true է նորից աշխատում է
// continue-ն հրաման չի այն առումով որ ինքը ֆունկցիա չի այլ ցիկլի ինֆորմացիա է որով ասում ենք ցիկլին երբ որ տեսնում ես continue-ին ընդհանուր բլոկը համարի ավարտված և աշխատանքտ սկսիր նորից

// while(true) {
//     let userResponse = prompt("aaaHi")
//     if(userResponse === "hajox") {
//         let userRespons = prompt("Hiiii");
//         if(userRespons === "barev") {
//             continue
//         }
//     }
//     alert("ok, we will continue");
//     break
// }


// Վարժություններ

// let i = 1;
// while(i <= 10) {
//     alert(i)
//     i++
// }

// let i = 10
// while(i > 0) {
//     alert(i)
//     i--
// }

// let i = 1
// while(i < 10) {
//     alert(i)
//     i += 2
// }

// let i = 0
// let sum = 0
// while(i < 10) {
//     alert(i)
//     sum += i
//     i += 1
// }
// alert(sum)

// let a = 10
// let b = 1
// while(a <= 15) {
//     b = b*a;
//     alert(a)
//     a = a + 1
// }
// alert(b)



// das 9 //
// JAVASCRIPT - Զանգվածներ(Arrays) - Ցուցակ






forEach([0, 1, 2, 3, 4],fun) {
    let i = 0
    while(i < Array.length)
}

