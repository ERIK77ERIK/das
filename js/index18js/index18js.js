// // 1
// let a = [5, 20, 44];
// let i2 = 0;

// while(i2 < a.length) {
//     alert(a[i2]);        
//     i2 = i2 + 1;
// };
// մենք անում ենք մի գործողություն այքան անգամ որքան որ զանգվածի մեջ եղած անդամների քանակն է 
// ու ամեն անգամ ֆունկցիան գործողություն անելուց վերցնում է հաջորդ անդամը առաջի անդամից սկսած մինչև վերջի անդամը



// // խնդիրը նրանումա որ էս լոգիկան կաշխատի միայն էս զանգվածի հետ 
// // էս լոգիկան փաթեթաորում ենք ֆունկցիաի մեջ որպեսզի կարողանանք ցանկացած զանգված տանք ու անենք էս գործողությունը
// // 2
// let foo = function(arr) {
//     let i = 0;
//     while(i < arr.length) {
//         alert(arr[i]);
//         i = i + 1;
//     };
// };

// foo([1, 2, 3]);

// foo([5, 6, 7]);

// // մենք իմացանք որ էս լոգիկան աշխատում է ամեն անգամ վերցնելով մեր տված զանգվածի հաջորդ անդամը առաջի անդամից սկսած միչև վերջի անդամը աշխատելով այնքան անգամ որքան անդամների քանակն է
// // դեպքեր կարողեն լինել որ մեզ պետք է այս նույն լոգիկայով երկու ֆունկցիա  (դեպք) որոնք անում են մի փոքր ուրիշ գործողություն(բայց ելի ամեն անգամ գործողությունը անելուց վերցնելով մեր տված զանգվածի առաջի անդամից սկսած հաջորդ անդամը միչև վերջի անդամը) օրինակ մի դեպքում մեզ պետք է որ կանչենք ֆունկցիաներից մեկը և նա օրինակ մեր տված զանգված ի ամեն մի անդամը alert անի  մյուս դեպքում կանչենք մյուս ֆունկցիան և նա մեր տված զանգվածի ամեն մի անդամը alert անի ինչ որ տեքստով

// let bar = function(arr) {
//     let i = 0;
//     while(i < arr.length) {
//         alert("What a great number " + arr[i]);
//         i = i + 1;
//     };
// };

// bar([10, 20, 30]);


// // որպեսզի երկու անգամ ֆունկցիա չստեղծենք դրա համար օգտագործում ենք այս մեթոդը

// // 3
// let forEach = function(arr, fun) {
//     let i = 0;
//     while(i < arr.length) {
//         fun(arr[i]);
//         i = i + 1;
//     };
// };

// forEach([5, 3, 1], function(val){alert("what is great number " + val);});

// [5, 20, 44].forEach(function(val, i) {
//     alert("what a great number " + val + " which is at index " + i );
// });


// forEach ֆունկցիայի փակագիծների մեջ տալիսենք զանգված ու ֆունկցիա ու նա աշխատացնում է այդ ֆունկցիան այդ զանգվածի ամեն անդամի համար

// forEach ֆունկցիան որ կանչում ենք և տալիսենք զանգված ու ֆունկցիա  նա
// 1.forEach ֆունկցիան կատարում է իրեն տված ֆունկցիաի գործողությունը այնքան անգամ ինչքան որ իրեն տված զանգվածի մեջի անդամների քանակն է քանի որ foreach-ին տված ֆունկցիան foreach-ի մեջ մենք կանչում ենք մի ցիկլի մեջ  որը սկսվում և ավարտվում է երբ որ առաջի անդամի index-ը մեկով ավելանալով ամեն պտույտին հասնում է զանգվածի երկարությանը
// 2.forEach ֆունկցիան կատարելով իրեն տված ֆունկցիայի գործողությունը առաջի անգամ ստանում է forEach ֆունկցիաին տված զանգվածի առաջին անդամը և ամեն անգամ կատրելուց այդ գործողությունը հաջորդ անդամը քանի որ forEach ֆունկցիաին տված ֆունկցիան forEach-ի մեջ կանչելուց տալիս էինք զանգվածի i-րդ անդամը որը սկսվում է 0-ից և ամեն անգամ մեկով ավելանալով ավարտվում է երբ որ այդ թիվի հասնում է վերջի անդամի index-ին




// Վարժություն

// let a = [3, 7, 2, 4];

// let f = function(a) {
//     return a + 2;
// };

// let z = 0;
// a.forEach(function(val) {
//     z = z + f(val) + 2;
// });

// let f2 = function(d) {
//     return f(d) + f(d);
// };

// let f3 = function(d) {
//     return f2(d) + 1;
// };

// alert(f(f3(f2(z))));

// կտպի 143


